---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2020/7/24 11:04
---

local StringUtil = {}

function StringUtil.IsNullOrEmpty(str)
    return str == nil or str == ""
end

function StringUtil.Split(str, delimiter)
    local result = {}

    while true do
        local pos = string.find(str, delimiter)
        if not pos then
            table.insert(result, str)
            break
        end
        local sub_str = string.sub(str, 1, pos - 1)
        table.insert(result, sub_str)
        str = string.sub(str, pos + 1, string.len(str))
    end

    return result
end

---data:(x,y,z)
function StringUtil.String2Vector3(data, split)
    local result = Vector3.zero
    if string.IsNullOrEmpty(data) then
        return result
    end

    local length = string.len(data)
    local str = string.sub(data, 2, length - 1)
    local strList = string.split(str, split)

    if #strList ~= 3 then
        Logger.LogErrorFormat("Invalid input:{0}", data);
    end
    result.x = tonumberWithDefault(string.GetValueByIndex(strList, 1 ,""), nil,0)
    result.y = tonumberWithDefault(string.GetValueByIndex(strList, 2 ,""), nil,0)
    result.z = tonumberWithDefault(string.GetValueByIndex(strList, 3 ,""), nil,0)

    --0,0,0 视为没有意义的向量，外部判断时 如果为nil 就避免进行 数学计算以节省开销
    if result.x == 0 and result.y ==0 and result.z == 0 then
        return nil
    end

    return result
end

---data:(x,y)
function StringUtil.String2Vector2(data, split)
    local result = Vector3.zero
    if string.IsNullOrEmpty(data) then
        return result
    end

    local length = string.len(data)
    local str = string.sub(data, 2, length - 1)
    local strList = string.split(str, split)
    if #strList ~= 2 then
        Logger.LogErrorFormat("Invalid input:{0}", data);
    end
    result.x = tonumberWithDefault(string.GetValueByIndex(strList, 1 ,""), nil,0)
    result.y = tonumberWithDefault(string.GetValueByIndex(strList, 2 ,""), nil,0)
    return result
end

return StringUtil