---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2021/12/6 22:55
---
local EffectBase = require("Engine/Systems/EffectSystem/Effects/EffectBase")
local EffectStatus = require("Engine/Systems/EffectSystem/EffectStatus")
local PoolingStrategyTypeEnum = require("Engine/Systems/ResourceSystem/PoolingStrategyTypeEnum")
local FootprintEffect = class("FootprintEffect", EffectBase)

local k_FadeInterval = 0.15
local k_BeginAlpha = 240 / 255

function FootprintEffect:Ctor(id, objOwner)
    FootprintEffect.__super.Ctor(self, id, objOwner)
end

function FootprintEffect:Start(needLoadResource)
    FootprintEffect.__super.Start(self, needLoadResource)
    self.m_CurrentAlpha = k_BeginAlpha
    self.m_KeepTime = 1
    self.m_FadeTime = self.m_Config.m_Duration - self.m_KeepTime
    --Logger.LogInfo("FadeTime:%s", self.m_FadeTime)
    self.m_Add = 0
    self:SetAlpha(k_BeginAlpha)
end

function FootprintEffect:Update(deltaTime)
    if self:IsLoadFinish() == false then
        return
    end

    if self.m_Status == EffectStatus.Ended then
        return
    end

    local duration = self.m_Config.m_Duration
    if self.m_KeepTime > 0 then
        self.m_KeepTime = self.m_KeepTime - deltaTime
        self.m_Time = self.m_Time + deltaTime
    else
        self.m_Add = self.m_Add + deltaTime
        if self.m_Add >= k_FadeInterval then
            self.m_Add = 0
            self.m_Time = self.m_Time + k_FadeInterval
            --Logger.LogInfo("FootprintEffect:Update self.m_Time:%s, duration:%s", self.m_Time, duration)
            if self.m_Time > duration then
                self.m_Time = 0
                self:Finish()
                return
            end
            self.m_CurrentAlpha = k_BeginAlpha * (duration - self.m_Time / self.m_FadeTime)
            self:SetAlpha(self.m_CurrentAlpha)
        end
    end
end

function FootprintEffect:SetAlpha(alpha)
    if self.m_EffectBehaviour == nil then
        return
    end
    --Logger.LogInfo("FootprintEffect:SetAlpha :%s, m_InstanceId:%s", alpha, self.m_InstanceId)
    self.m_EffectBehaviour:SetAlpha(alpha)
end

function FootprintEffect:OnLoadModelSuccess()
    FootprintEffect.__super.OnLoadModelSuccess(self)
    self:SetAlpha(k_BeginAlpha)
end

function FootprintEffect:IsNeedEffectBehaviour()
    return true
end

function FootprintEffect:Destroy()
    FootprintEffect.__super.Destroy(self)
end

function FootprintEffect:GetPoolingStrategyType()
    return PoolingStrategyTypeEnum.EffectDefault
end

function FootprintEffect:Finish()
    --Logger.LogInfo("FootprintEffect:Finish m_InstanceId:%s", self.m_InstanceId)

    self:SetActive(false)
    self.m_Status = EffectStatus.Ended
    local owner = self.m_Owner
    if not owner then
        return
    end
    local footPrintComponent = owner.m_FootprintComponent
    if not footPrintComponent then
        return
    end
    self.m_Owner.m_FootprintComponent:PushFootprintToPool(self)
end

---这里需要将effect缓存在ComponentFootprint中，所以一直返回false 不会被EffectManager的Update Destroy
function FootprintEffect:IsFinish()
    return false
end

function FootprintEffect:IsAvailable()
    return self.m_Status ~= EffectStatus.Ended
end

function FootprintEffect:SetFootEffectType(footEffectType)
    self.m_FootEffectType = footEffectType
end

return FootprintEffect