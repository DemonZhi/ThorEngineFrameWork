---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2020/9/14 9:57
---

local ComponentDefine =
{
    ComponentType =
    {
        k_ComponentNone = 1,
        k_ComponentEffect = 2,
        k_ComponentSkill = 3,
        k_ComponentFootPrint = 4,
        k_ComponentFightResult = 5,
        k_ComponentSkillCombo = 6,
        k_ComponentPlaySpeedControl = 7,
        k_ComponentMove = 8,
        k_ComponentRide = 9,
        k_ComponentState = 10,
        k_ComponentEventDispatcher = 11,
        k_ComponentStateChecker = 12,
        k_ComponentIK = 13,
        k_ComponentModelPostProcess = 14,
        k_ComponentAvatar = 15,
        k_ComponentSkillTarget = 17,
        k_ComponentEffectAmountControl = 18,
        k_ComponentAttribute = 19,
        k_ComponentFaceMakeUp = 20,
        k_ComponentBag = 21,
        k_ComponentQuest = 22,
        k_ComponentHUD = 23,
        k_ComponentFightResultRecorder = 24,
        k_ComponentTurnStrategy = 25,
        k_ComponentDrag = 26,
        k_ComponentLoadModelQueue = 27,
    },

    SyncConsts =
    {
        ---/* 每隔多少帧向服务器同步一次位置 */
        k_SyncPosFrameCount = 5,
        ---/* 每隔多少帧向服务器同步一次位置 */
        k_SyncPosFrameCountPrecise = 3,
        ---/* 向服务器同步位置时向前预测多少帧 */
        k_SyncPosPredictCount = 5,
        ---/* 方向相差多少时向服务器同步一次位置 */
        k_SyncPosDifAngle = 90,
        ---/* 方向相差多少时向服务器同步一次Ride位置 */
        k_SyncPosDifAngleRide = 10,
        ---/* 方向相差多少时向服务器同步一次位置,高精度版 */
        k_SyncPosDifAnglePrecise = 10,
        ---/* 方向相差多少时向服务器同步一次位置,最高精度版 */
        k_SyncPosDifAngleMaxPrecise = 1,
        ---/* 角度精度 */
        k_AnglePrecision = 1,
        ---/* 加速的距离误差 */
        k_MaxPositionDifference = 2,
        ---/* 第三方预测步数上限*/
        k_Max3rdPredictStep = 30,
        ---/* 第三方触发移动的最小距离*/
        k_MinDistanceToMove = 0.1,
        ---/* Int To Float Factor*/
        k_Int2FloatFactor = 0.001,
    },

    MoveSyncType =
    {
        k_None = 0,
        k_Move = 1,
        k_Sprint = 2,
        k_SprintTurn = 3,
        k_MoveStop = 4,
        k_SprintStop = 5,
        k_RideMove = 6,
        k_RideMoveStop = 8,
        k_RideRunImmediate = 9,

        --for skill
        k_SkillMove = 1,
        k_SkillMoveAlmostEnd = 2,
        k_SkillMoveStop = 3,
    },

    MoveSyncTypeMonster =
    {
        k_Move = 1,
        k_MoveStop = 4,
        k_Walk = 6,
        k_Rush = 7,
        k_Jump = 8,
    },

    MoveType =
    {
        None = 0,
        Run = 1,
        Sprint = 2,
        SprintTurn = 3,
        SprintStop = 4,
        SprintStopRearSwing = 5,
        RideRun = 6,
        RideRunStop = 7,
        RideRunStopRearSwing = 8,
        RunStop = 9,
    },

    JumpType =
    {
        k_StandJump = 0,
        k_RunJump = 1,
        k_SprintJump = 2,
        k_RideJump = 3,
        k_DiveJump = 4,
    },

    JumpStage =
    {
        k_None = 0,
        k_Pre = 1,
        k_Idle = 2,
        k_Cast = 3,
        k_Landing = 4,
        k_Landed = 5,
    },

    SwimType =
    {
        k_None = -1,
        k_Idle = 0,
        k_Swim = 1,
        k_Sprint = 2,
        k_SprintCast = 3,
        k_Diving = 4,
        k_JumpDiving = 5,
        k_JumpDivingCast = 6,
        k_DivingCast = 7,
        k_Cast = 8,
    },

    SwimSyncType =
    {
        k_Idle = 1,
        k_SwimMove = 2,
        k_Sprint = 3,
        k_SprintMove = 4,
        k_Stop = 5,
        k_Diving = 6,
        k_JumpDiving = 7,
        k_JumpDivingMove = 8,
        k_JumpDivingCast = 9,
        k_DivingCast = 10,
    },

    AttributeDefine =
    {
        ---odin define
        k_MoveSpeed = 1001,
        k_RotateSpeed = 1002,
        k_SprintSpeed = 1003,
        k_SprintRotateSpeed = 1004,
        k_FallHeight = 1005,
        k_FallGravity = 1006,

        ---sgame define
        k_Hp = 7,
        k_MaxHp = 8,
    },

    PlayerDeserializeEndFlag =
    {
        k_SER_FLAG_SPIRIT_END = 0x77,
        k_SER_FLAG_PROP_END = 0x78,
        k_SER_FLAG_STATE_END = 0x79,
        k_SER_FLAG_SKILL_TALENT_END = 0x7a,
        k_SER_FLAG_BAG_END = 0x7b,
        k_SER_FLAG_PLAYER_MAIL_END = 0x7e,
        k_SER_FLAG_PLAYER_TIME_END = 0x7f,
        k_SER_FLAG_PLAYER_RECHARGE_END = 0x81,
        k_SER_FLAG_HERO_ATTR_END = 0x83,
        k_SER_FLAG_PLAYER_RMB_END = 0x8d,
        k_SER_FLAG_PLAYER_FRIEND_END = 0x93,
        k_SER_FLAG_EXT_PARAM_END = 0x94,
        k_SER_FLAG_PREVENT_KILL_CHEAT_END = 0xa7,
        k_SER_FLAG_CHAT_END = 0xb1,
        k_SER_FLAG_ANNOUNCE_END = 0xbb,
        k_SER_FLAG_PLAYER_LIKE_END = 0xbf,
        k_SER_FLAG_PLAYER_PVP_RANK_END = 0xc0,
        k_SER_FLAG_PLAYER_WEAPON_END = 0xc1,
        k_SER_FLAG_PLAYER_AVATAR_END = 0xc2,
        k_SER_FLAG_PLAYER_ACHIEVE_END = 0xc3,
        k_SER_FLAG_PLAYER_MORPH_END = 0xc4,
        k_SER_FLAG_WAREHOUSE_END = 0xc5,
        k_SER_FLAG_PLAYER_TEAM_END = 0xc6,
        k_SER_FLAG_PLAYER_QUEST_END = 0xc7,
        k_SER_FLAG_PLAYER_RIDING_END = 0xc8,
        k_SER_FLAG_SKILL_CONFIG_END = 0xc9,
        k_SER_FLAG_SKILL_INFO_END = 0xca,
        k_SER_FLAG_ACTIVE_PLAYER_RIDING_END = 0xcb,
        k_SER_FLAG_PLAYER_SNAPSHOT_ATTR_END = 0xcc,
        k_SER_GLAG_PLAYER_EQUIPED_ITEM_END = 0xcd,
        k_SER_FLAG_PLAYER_PROP_POINT_END = 0xce,
        k_SER_FLAG_PLAYER_EQUIP_IDS_END = 0xcf,
        k_SER_FLAG_EQUIP_MAKE_END = 0xd0,
    },

    MonsterDeserializeEndFlag =
    {
        k_SER_FLAG_SPIRIT_END = 0x30,
        k_SER_FLAG_PROP_END = 0x31,
        k_SER_FLAG_STATE_END = 0x32,
        k_SER_FLAG_SYNC_PATH_END = 0x33,
    },

    TriggerDeserializeEndFlag =
    {
        k_SER_FLAG_TRIGGER_END = 0x20,
    },

    FightResultType = 
    {
        k_None = 0,
        k_Damage = 1,
        k_Hit = 2,
        k_Dead = 3,
        k_Attr = 4,
        k_NeedRecordType = 10,
        k_AddBuff = 11,
        k_Daze = 12,
        k_Missile = 13,
        k_Caught = 14,
    },
}

return ComponentDefine