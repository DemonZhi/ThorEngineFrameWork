---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2021/1/28 14:39
---
local ComponentEventDispatcher = class("ComponentEventDispatcher", ComponentBase)
local ComponentDefine = require("Engine/Systems/ObjectSystem/Components/ComponentDefine")
ComponentEventDispatcher.m_ComponentId = ComponentDefine.ComponentType.k_ComponentEventDispatcher
local k_HandlerIndex = 1
local k_ParamsIndex = 2

function ComponentEventDispatcher:Init(object)
    ComponentEventDispatcher.__super.Init(self, object)
    self.m_EventDic = {}
end

function ComponentEventDispatcher:Destroy()
    self.m_EventDic = {}
end

--添加监听事件
function ComponentEventDispatcher:AddEventListener(event, handler, params)
    local handlers = self.m_EventDic[event] or {}
    for i=1,#handlers do
        if handler == handlers[i][k_HandlerIndex] then
            print("重复添加回调事件!"..debug.traceback())
            return
        end
    end

    local vo = {handler, params}
    table.insert(handlers,vo)
    if event == nil then
        print("未定义事件！"..debug.traceback())
    end
    self.m_EventDic[event] = handlers
end

--删除监听事件
function ComponentEventDispatcher:RemoveEventListener(event, handler)
    if handler == nil then
        self.m_EventDic[event] = nil
        return
    end

    local handlers = self.m_EventDic[event]
    if handlers == nil then return end
    for i = 1, #handlers do
        if handlers[i][k_HandlerIndex] == handler then
            table.remove(handlers, i)
            return
        end
    end
end

--事件分发
function ComponentEventDispatcher:Dispatch(event, ...)
    local handlers = self.m_EventDic[event]
    local params = {...}

    if handlers ~= nil then
        for i = #handlers, 1, -1 do
            if handlers[i][k_ParamsIndex] == nil then
                handlers[i][k_HandlerIndex](table.unpack(params))
            else
                handlers[i][k_HandlerIndex](handlers[i][k_ParamsIndex],table.unpack(params))
            end
        end
    end
end

return ComponentEventDispatcher
