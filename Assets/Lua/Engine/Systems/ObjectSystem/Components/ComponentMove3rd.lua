---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2020/10/28 15:30
local ComponentDefine = require("Engine/Systems/ObjectSystem/Components/ComponentDefine")
local ComponentMove3rd = class("ComponentMove3rd", ComponentBase)
local StateDefine = SGEngine.Core.StateDefine

ComponentMove3rd.m_ComponentId = ComponentDefine.ComponentType.k_ComponentMove

function ComponentMove3rd:Init(object)
    ComponentMove3rd.__super.Init(self, object)
end

function ComponentMove3rd:Destroy()
    ComponentMove3rd.__super.Destroy(self)
end

function ComponentMove3rd:Move(targetPos, angle)
    local owner = self.m_Owner
    if not owner:IsState(StateDefine.k_StateMove) then
        if owner:CanChangeState(StateDefine.k_StateMove) then
            owner.m_Core:ChangeToMove(targetPos, angle)
        else
            owner.m_StateComponent:OnBeginMove()
        end
    else
        owner.m_Core:OnSyncStateMove(StateDefine.k_StateMove, targetPos, angle)
        local state = owner:GetState(StateDefine.k_StateMove)
        if state then
            state.OnBeginMove(owner, owner.m_StateComponent)
        end
    end
end

function ComponentMove3rd:StopMove()
    self.m_Owner.m_Core:OnSyncStateStopMove(StateDefine.k_StateMove)
end

return ComponentMove3rd