---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2020/10/28 15:30
---
local ComponentDefine = require("Engine/Systems/ObjectSystem/Components/ComponentDefine")
local BattleMessage = require("MainGame/Message/BattleMessage")
local ComponentMoveHero = class("ComponentMoveHero", ComponentBase)
local StateDefine = SGEngine.Core.StateDefine
local MoveType = ComponentDefine.MoveType
ComponentMoveHero.m_ComponentId = ComponentDefine.ComponentType.k_ComponentMove

function ComponentMoveHero:Init(object)
    ComponentMoveHero.__super.Init(self, object)
    self.m_CurrentMoveType = MoveType.None
    self.m_FrameCount = 0
    self.m_IsEquipTorch = false
end

function ComponentMoveHero:Destroy()
    ComponentMoveHero.__super.Destroy(self)
end

function ComponentMoveHero:Move(direction, isSprint)
    local owner = self.m_Owner
    local currentMoveType = self:GetCurrentMoveType()
    self.m_Owner.m_StateComponent.m_StateMoveParam.m_IsSprint = isSprint
    if owner:IsState(StateDefine.k_StateMove) == false then
        owner.m_Core:ChangeToMove(direction)
    elseif owner:IsState(StateDefine.k_StateRide) then
        owner.m_Core:ChangeToMove(direction)
    elseif (currentMoveType == MoveType.Run) == isSprint then
        owner.m_Core:ChangeToMove(direction)
    else
        owner.m_Core:OnJoyStickMove(direction)
    end
end

function ComponentMoveHero:StopMove()
    self.m_Owner.m_Core:OnJoyStickRelease()
end

function ComponentMoveHero:GetCurrentMoveType()
    if self.m_Owner:IsState(StateDefine.k_StateMove) == false then
        return MoveType.None
    end
    local state = self.m_Owner:GetState(StateDefine.k_StateMove)
    local currentMoveType = state.GetCurrentMoveType(self.m_Owner)
    return currentMoveType
end

return ComponentMoveHero