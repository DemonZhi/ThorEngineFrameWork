---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2021/1/27 11:27
---
local StateDefine = SGEngine.Core.StateDefine
local StateMoveMonster = class("StateMoveMonster", StateBase)
local StateConsts = require("Engine/Systems/ObjectSystem/State/StateConsts")
local ComponentDefine = require("Engine/Systems/ObjectSystem/Components/ComponentDefine")
local MoveSyncType = ComponentDefine.MoveSyncTypeMonster
local SyncConsts = ComponentDefine.SyncConsts

function StateMoveMonster.Ctor(owner, stateComponent)
    StateMoveMonster.__super.Ctor(owner, stateComponent)
    if stateComponent.m_StateMoveParam == nil then
        stateComponent.m_StateMoveParam = {}
    end
end

function StateMoveMonster.Init(owner, stateComponent)

end

function StateMoveMonster.GetAnimationName(owner)
    local result = StateConsts.k_RunAnimationName
    local syncInfo = owner.m_StateComponent.m_StateMoveParam.m_CurrentSyncInfo
    if syncInfo == nil then
        return result
    end

    if syncInfo.m_SyncType == MoveSyncType.k_Walk then
        result = StateConsts.k_WalkAnimationName
    end

    return result
end

function StateMoveMonster.OnStateMoveGround(owner, syncInfo)
    if not syncInfo then
        return
    end
    local stateComponent = owner.m_StateComponent
    local stateParam = stateComponent.m_StateMoveParam
    stateParam.m_CurrentSyncInfo = syncInfo
    local moveComponent = owner.m_MoveComponent
    local type = syncInfo.m_SyncType
    if type == MoveSyncType.k_MoveStop then
        local position = syncInfo.m_TargetPosition
        owner:SetPositionXYZ(position.x, position.y, position.z)
        owner:SetAngle(syncInfo.m_Angle)
        moveComponent:StopMove()
    elseif type == MoveSyncType.k_Move or type == MoveSyncType.k_Rush or type == MoveSyncType.k_Walk then
        local targetPos = syncInfo.m_TargetPosition
        local angle = syncInfo.m_Angle
        moveComponent:Move(targetPos, angle)
        --owner:SetCurrentMoveSpeed(syncInfo.m_JoystickAngle)
        StateMoveMonster.AdjustSpeed(owner, syncInfo)
        StateMoveMonster.CheckAnimation(owner)
    end
end

---todo 这里可以优化一下不用每次都SetSpeed
function StateMoveMonster.AdjustSpeed(owner, syncInfo)
    local position = owner:GetPosition()
    local positionDif = position:Sub(syncInfo.m_TargetPosition)
    local moveSpeed = syncInfo.m_JoystickAngle
    if positionDif:SqrMagnitude() > 0.5 then
        moveSpeed = moveSpeed * 1.5
        owner:SetCurrentMoveSpeed(moveSpeed)
    else
        owner:SetCurrentMoveSpeed(moveSpeed)
    end
end

function StateMoveMonster.CheckAnimation(owner)
    local animationName = StateMoveMonster.GetAnimationName(owner)
    if owner:IsPlayingAnimation(animationName) == false then
        StateMoveMonster.PlayAnimation(owner, animationName)
    end
end

return StateMoveMonster