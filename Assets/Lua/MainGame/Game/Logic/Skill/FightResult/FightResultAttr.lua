---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2022/10/25 16:36
---

local ComponentDefine = require("Engine/Systems/ObjectSystem/Components/ComponentDefine")
local FightResultBase = require("MainGame/Game/Logic/Skill/FightResult/FightResultBase")
local ObjectPool = require("MainGame/Game/Logic/Skill/ObjectPool")
local FightResultAttr = class("FightResultAttr", FightResultBase)
local FightResultType = ComponentDefine.FightResultType
FightResultAttr.m_FightResultType = FightResultType.k_Attr
if FightResultAttr.m_Pool == nil then
    FightResultAttr.m_Pool = ObjectPool.CreatePool(FightResultAttr)
end

function FightResultAttr.Ctor()
    FightResultAttr.__super.Ctor(self)
end

function FightResultAttr.Get()
    local pool = FightResultAttr.m_Pool
    if pool then
        return pool:Get()
    end
end

function FightResultAttr:Recycle()
    local pool = FightResultAttr.m_Pool
    if pool then
        pool:Recycle(self, true)
    end
end

function FightResultAttr:Init(attackObjectId)
    FightResultAttr.__super.Init(self)
    self.m_AttackObjectId = attackObjectId
end

function FightResultAttr:Deserialize(netBuffer)
    self.m_TargetID = netBuffer:ReadInt()
    local attrIndex = netBuffer:ReadUByte()
    self.m_AttrIndex = attrIndex
    local value
    local valueType = ComponentAttribute.GetAttrValueType(attrIndex)
    ---todo --- config

    if valueType == "float" then
        value = netBuffer:ReadFloat()
    elseif valueType == "ushort" then
        value = netBuffer:ReadUShort()
    else
        value = netBuffer:ReadInt()
    end
    self.m_HitPoint = netBuffer:ReadByte()
    self.m_Value = value
    --Logger.LogInfo("[FightResultAttr]Deserialize FightResultAttr:m_TargetID:{%d},m_HitPoint:{%d},self.m_AttrIndex:{%s},m_Value:{%s}",
    --        self.m_TargetID, self.m_HitPoint, self.m_AttrIndex, self.m_Value)
end

function FightResultAttr:Execute()
    local object = ObjectManager.GetObject(self.m_TargetID)
    if not object then
        return
    end

    if object:IsValid() == false then
        return
    end

    local attrComponent = object.m_AttrComponent
    if not attrComponent then
        return
    end

    attrComponent:SetAttribute(self.m_AttrIndex, self.m_Value)
end

return FightResultAttr