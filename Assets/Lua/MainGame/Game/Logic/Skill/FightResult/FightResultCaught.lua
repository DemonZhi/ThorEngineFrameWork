---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2021/12/27 17:52
---
local ComponentDefine = require("Engine/Systems/ObjectSystem/Components/ComponentDefine")
local FightResultBase = require("MainGame/Game/Logic/Skill/FightResult/FightResultBase")
local ObjectPool = require("MainGame/Game/Logic/Skill/ObjectPool")
local FightResultCaught = class("FightResultCaught", FightResultBase)
local FightResultType = ComponentDefine.FightResultType

FightResultCaught.m_FightResultType = FightResultType.k_Caught
if FightResultCaught.m_Pool == nil then
    FightResultCaught.m_Pool = ObjectPool.CreatePool(FightResultCaught)
end

function FightResultCaught.Ctor()
    FightResultCaught.__super.Ctor(self)
end

function FightResultCaught.Get()
    local pool = FightResultCaught.m_Pool
    if pool then
        return pool:Get()
    end
end

function FightResultCaught:Recycle()
    local pool = FightResultCaught.m_Pool
    if pool then
        pool:Recycle(self, true)
    end
end

function FightResultCaught:Init(attackObjectId)
    FightResultCaught.__super.Init(self)
    self.m_AttackObjectID = attackObjectId
end

function FightResultCaught:Deserialize(netBuffer)
    self.m_TargetID = netBuffer:ReadUInt()
    self.m_ConfigID = netBuffer:ReadUInt()
    self.m_HitPoint = netBuffer:ReadByte()
    --Logger.LogInfo("[FightResultCaught]Deserialize FightResultCaught:m_TargetID:{%d},m_ConfigID:{%d},m_HitPoint:{%d}",
    --        self.m_TargetID, self.m_ConfigID, self.m_HitPoint)
end

function FightResultCaught:Execute()
    local object = ObjectManager.GetObject(self.m_TargetID)
    if not object then
        return
    end

    if object:IsValid() == false then
        return
    end

    --Logger.LogInfo("SetCaught, caster:{%s}, target:{%s}", self.m_AttackObjectID, self.m_TargetID)
    object:ChangToCaught(self.m_AttackObjectID, self.m_ConfigID)
end

return FightResultCaught